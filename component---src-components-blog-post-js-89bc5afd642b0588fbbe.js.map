{"version":3,"sources":["webpack:///./src/components/blogPost.js","webpack:///./src/components/CodeBlock.js","webpack:///./src/components/Layout.js"],"names":["Template","props","post","data","mdx","_props$pageContext","pageContext","next","prev","timeToRead","wordCount","frontMatter","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_Layout__WEBPACK_IMPORTED_MODULE_5__","react_textfit__WEBPACK_IMPORTED_MODULE_3__","mode","title","_CodeBlock__WEBPACK_IMPORTED_MODULE_4__","content","code","body","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","frontmatter","pageQuery","Code","_ref","children","className","language","replace","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","prism_react_renderer__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","defaultProps","theme","_ref2","style","tokens","getLineProps","getTokenProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","padding","filter","line","some","token","empty","map","i","key","components","__webpack_exports__","_ref3","css","marginBottom","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_5___default","a","h1","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react_textfit__WEBPACK_IMPORTED_MODULE_4__","Layout","display","justifyContent","alignItems","backgroundColor","marginTop","marginLeft","marginRight","maxWidth","boxShadow","borderRadius","fontFamily","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","color","fontSize","@media (min-width: 576px)","flexGrow","lineHeight","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-components-blog-post-js-89bc5afd642b0588fbbe.js","sourcesContent":["/* global tw */\nimport React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { Textfit } from 'react-textfit'\nimport CodeBlock from './CodeBlock'\nimport Layout from './Layout'\n\n/* fontFamily: 'avenir' */\nconst Template = props => {\n  const post = props.data.mdx\n  const { next, prev, timeToRead, wordCount, frontMatter } = props.pageContext\n  return (\n    <Layout>\n      <h1>\n        <Textfit mode=\"single\">{frontMatter.title}</Textfit>\n      </h1>\n      <div>\n        <em>{timeToRead} min</em>({wordCount} words)\n      </div>\n      <CodeBlock content={post.code.body} />\n      <div>\n        {next && (\n          <Link to={next.fields.slug}>Next: {next.frontmatter.title}</Link>\n        )}\n      </div>\n      <div>\n        {prev && (\n          <Link to={prev.fields.slug}>Previous: {prev.frontmatter.title}</Link>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n  query MDXRuntimeQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      code {\n        body\n      }\n    }\n  }\n`\n","/* global tw */\nimport React from 'react'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport { MDXProvider } from '@mdx-js/react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\n\nexport const Code = ({ children, className }) => {\n  const language = className ? className.replace(/language-/, '') : null\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children}\n      language={language}\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style, padding: '20px' }}>\n          {tokens\n            .filter(line => line.some(token => !token.empty))\n            .map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nconst components = {\n  code: Code,\n}\n\nexport default ({ content }) => (\n  <div css={tw`mb-4`}>\n    <MDXProvider components={components}>\n      <MDXRenderer>{content}</MDXRenderer>\n    </MDXProvider>\n  </div>\n)\n","/* global tw */\nimport React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { Textfit } from 'react-textfit'\nimport 'normalize.css'\nimport theme from 'prism-react-renderer/themes/nightOwl'\nimport { Code } from './CodeBlock'\n\nconst FitH1 = ({ children, ...props }) => (\n  <h1 {...props}>\n    <Textfit mode=\"single\">{children}</Textfit>\n  </h1>\n)\n\nconst components = {\n  h1: FitH1,\n  code: Code,\n}\nconst Layout = ({ children }) => (\n  <div css={tw`flex justify-center items-center bg-grey-light`}>\n    <div\n      css={tw`bg-white container my-8 mx-auto max-w-xl shadow-lg rounded-lg font-sans`}\n    >\n      <div\n        css={tw`px-16 py-4 text-center text-grey-darkest text-xl sm:text-left sm:flex-grow leading-normal`}\n      >\n        <MDXProvider components={components}>{children}</MDXProvider>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}