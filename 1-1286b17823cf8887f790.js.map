{"version":3,"sources":["webpack:///./node_modules/prism-react-renderer/themes/nightOwl.js","webpack:///./node_modules/react-textfit/lib/index.js","webpack:///./node_modules/gatsby-mdx/mdx-renderer.js","webpack:///./node_modules/prism-react-renderer/es/vendor/prism/index.js","webpack:///./node_modules/prism-react-renderer/es/defaultProps.js","webpack:///./node_modules/prism-react-renderer/es/utils/normalizeTokens.js","webpack:///./node_modules/prism-react-renderer/es/utils/themeToDict.js","webpack:///./node_modules/prism-react-renderer/es/components/Highlight.js","webpack:///./node_modules/prism-react-renderer/es/index.js","webpack:///./node_modules/react-textfit/lib/Textfit.js","webpack:///./node_modules/react-textfit/lib/utils/shallowEqual.js","webpack:///./node_modules/react-textfit/lib/utils/series.js","webpack:///./node_modules/node-libs-browser/node_modules/process/browser.js","webpack:///./node_modules/react-textfit/lib/utils/whilst.js","webpack:///./node_modules/react-textfit/lib/utils/throttle.js","webpack:///./node_modules/react-textfit/lib/utils/uniqueId.js","webpack:///./node_modules/react-textfit/lib/utils/innerSize.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js","webpack:///./node_modules/prism-react-renderer/es/vendor/prism/prism-core.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark.js"],"names":["module","exports","plain","color","backgroundColor","styles","types","style","fontStyle","Object","defineProperty","value","Textfit","undefined","obj","_Textfit","__webpack_require__","_Textfit2","__esModule","default","React","require","useMDXComponents","mdx","useMDXScope","_ref","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","_objectSpread","keys","values","map","key","_construct","Function","concat","apply","createElement","Prism","comment","interpolation","funcPattern","insideEqu","prism_core_default","a","languages","markup","prolog","doctype","cdata","tag","pattern","greedy","inside","punctuation","namespace","attr-value","lookbehind","attr-name","entity","hooks","add","env","type","attributes","content","replace","xml","html","mathml","svg","insideString","variable","number","operator","bash","shebang","alias","string","function","keyword","boolean","shell","clike","class-name","c","extend","insertBefore","macro","directive","constant","cpp","raw-string","css","atrule","rule","url","selector","property","important","rest","style-attr","javascript","regex","function-variable","template-string","interpolation-punctuation","script","js","util","clone","jsx","spread","script-punctuation","stringifyToken","token","join","language","walkTokens","tokens","openedTags","i","length","notTagNorBrace","tagName","pop","push","openedBraces","plainText","splice","Token","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","delimiter","multiline-string","actionscript","pseudo-element","pseudo-class","class","id","attribute","hexcode","diff","coord","deleted","inserted","docker","dockerfile","elixir","atom","capture","argument","forEach","o","erlang","quoted-function","quoted-atom","git","command","parameter","commit_sha1","go","builtin","graphql","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","code","match","indexOf","toUpperCase","grammar","tokenizePlaceholders","j","k","t","s","index","replacement","before","substring","middle","tokenize","after","filter","v","Array","prototype","handlebars","block","brackets","haskell","char","import_statement","hvariable","java","annotation","generics","json","null","jsonp","equation-command","latex","equation","headline","less","mixin-usage","makefile","symbol","markdown","blockquote","title","hr","list","url-reference","bold","italic","objectivec","ocaml","php","shell-comment","package","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","string_interpolation","test","this","global","python","triple-quoted-string","reason","character","constructor","label","ruby","rust","lifetime-annotation","macro-rules","closure-params","sass","atrule-line","variable-line","property-line","scss","parent","placeholder","statement","sql","func","stylus","atrule-declaration","variable-declaration","property-declaration","swift","typescript","ts","vim","yaml","scalar","datetime","prism","es_defaultProps","theme","newlineRe","normalizeEmptyLines","line","empty","utils_normalizeTokens","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","acc","splitByNewlines","split","newlineCount","_i","_extends","assign","target","arguments","source","hasOwnProperty","call","utils_themeToDict","base","create","themeDict","reduce","themeEntry","includes","accStyle","root","Highlight_extends","excluded","sourceKeys","components_Highlight","_Component","subClass","superClass","Highlight","_this","_len","args","_key","prevTheme","prevLanguage","getThemeDict","getLineProps","className","output","getStyleForToken","_ref2","typesSize","display","baseStyle","typeStyles","getTokenProps","_ref3","__proto__","render","_this$props","mixedTokens","react","d","__webpack_exports__","_createClass","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","_shallowEqual2","_series2","_whilst2","_throttle2","_uniqueId2","_innerSize","assertElementFitsWidth","el","width","scrollWidth","assertElementFitsHeight","height","scrollHeight","TextFit","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","getPrototypeOf","state","fontSize","ready","handleWindowResize","process","console","warn","setPrototypeOf","_inherits","Component","throttle","autoResize","window","addEventListener","prevProps","removeEventListener","pid","_this2","_props","min","max","mode","forceSingleModeWidth","onReady","_parent","wrapper","_child","originalWidth","innerWidth","originalHeight","innerHeight","isNaN","shouldCancelProcess","testPrimary","testSecondary","mid","low","high","setState","stepCallback","whilstCallback","parseInt","Math","err","_this3","_props2","text","forceWidth","_objectWithoutProperties","_state","finalStyle","wrapperStyle","whiteSpace","ref","propTypes","node","oneOf","bool","defaultProps","objA","objB","keysA","keysB","hasOwn","tasks","cb","results","current","isSync","done","end","_process2","nextTick","each","result","_process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","iterator","callback","next","wait","ctx","rtn","timeoutID","last","Date","delta","uid","getComputedStyle","clientHeight","getPropertyValue","clientWidth","Parent","Class","Reflect","construct","sham","Proxy","toString","isNativeReflectConstruct","bind","_setPrototypeOf","p","toObject","$keys","it","$export","core","fails","KEY","exec","fn","exp","S","F","uniqueId","_","encode","objId","visited","redef","lang","insert","newToken","ret","DFS","plugins","highlight","stringify","matchGrammar","strarr","startPos","oneshot","patterns","lookbehindLength","flags","RegExp","pos","str","lastIndex","from","to","delNum","slice","wrapped","matchedStr","element","classes","aliases","opacity","textDecorationLine","fontWeight"],"mappings":"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","file":"1-1286b17823cf8887f790.js","sourcesContent":["// @flow\n// Original: https://github.com/sdras/night-owl-vscode-theme\n// Converted automatically using ./tools/themeFromVsCode\n\n/*:: import type { PrismTheme } from '../src/types' */\n\nvar theme /*: PrismTheme */ = {\n  plain: {\n    color: \"#d6deeb\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(99, 119, 119)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(173, 219, 103)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(214, 222, 235)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\"\n      }\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n      }\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(255, 203, 139)\"\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"rgb(127, 219, 202)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\"\n      }\n    },\n    {\n      types: [\"property\"],\n      style: {\n        color: \"rgb(128, 203, 196)\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\"\n      }\n    }\n  ]\n};\n\nmodule.exports = theme;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Textfit = undefined;\n\nvar _Textfit = require('./Textfit');\n\nvar _Textfit2 = _interopRequireDefault(_Textfit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Textfit = _Textfit2.default;\nexports.default = _Textfit2.default;","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n","import Prism from './prism-core';\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /(^|[^\\\\])[\"']/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  var insideString = {\n    variable: [// Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // Command Substitution\n    {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    'string': [//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'variable': insideString.variable,\n    // Originally based on http://ss64.com/bash/\n    'function': {\n      pattern: /(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var inside = insideString.variable[1].inside;\n  inside.string = Prism.languages.bash.string;\n  inside['function'] = Prism.languages.bash['function'];\n  inside.keyword = Prism.languages.bash.keyword;\n  inside['boolean'] = Prism.languages.bash['boolean'];\n  inside.operator = Prism.languages.bash.operator;\n  inside.punctuation = Prism.languages.bash.punctuation;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /[a-z0-9_]+(?=\\()/i,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n  'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['class-name'];\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'operator': /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\nPrism.languages.insertBefore('cpp', 'keyword', {\n  'class-name': {\n    pattern: /(class\\s+)\\w+/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\nPrism.languages.css = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n  'atrule': {\n    pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n  'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n  'string': {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n  'important': /\\B!important\\b/i,\n  'function': /[-a-z0-9]+(?=\\()/i,\n  'punctuation': /[(){};:]/\n};\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'style': {\n      pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n      lookbehind: true,\n      inside: Prism.languages.css,\n      alias: 'language-css',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'style-attr': {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        'attr-name': {\n          pattern: /^\\s*style/i,\n          inside: Prism.languages.markup.tag.inside\n        },\n        'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        'attr-value': {\n          pattern: /.+/i,\n          inside: Prism.languages.css\n        }\n      },\n      alias: 'language-css'\n    }\n  }, Prism.languages.markup.tag);\n}\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  },\n  'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: null // See below\n\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {} else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: /[^{}\\s][^{}]*(?=\\s*\\{)/,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': /\\[[^\\]]+\\]/\n  }\n};\nPrism.languages.insertBefore('css', 'function', {\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'number': /[\\d%.]+/\n});\n/* \"prismjs/components/prism-diff\" */\n\nPrism.languages.diff = {\n  'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n  /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n  /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n  /^\\d+.*$/m],\n  // Match inserted and deleted lines. Support both +/- and >/< styles.\n  'deleted': /^[-<].*$/m,\n  'inserted': /^[+>].*$/m,\n  // Match \"different\" lines (prefixed with \"!\") in context diff.\n  'diff': {\n    'pattern': /^!(?!!).+$/m,\n    'alias': 'important'\n  }\n};\n/* \"prismjs/components/prism-docker\" */\n\nPrism.languages.docker = {\n  'keyword': {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\n    lookbehind: true\n  },\n  'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  'comment': /#.*/,\n  'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n};\nPrism.languages.dockerfile = Prism.languages.docker;\n/* \"prismjs/components/prism-elixir\" */\n\nPrism.languages.elixir = {\n  'comment': {\n    pattern: /#.*/m,\n    lookbehind: true\n  },\n  // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n  'regex': {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: true\n  },\n  'string': [{\n    // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: true,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: true,\n    inside: {}\n  }, {\n    // Multi-line strings are allowed\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {}\n  }],\n  'atom': {\n    // Look-behind prevents bad highlighting of the :: operator\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  // Look-ahead prevents bad highlighting of the :: operator\n  'attr-name': /\\w+:(?!:)/,\n  'capture': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'argument': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'variable'\n  },\n  'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'operator': [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    // We don't want to match <<\n    pattern: /([^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /([^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n};\nPrism.languages.elixir.string.forEach(function (o) {\n  o.inside = {\n    'interpolation': {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        'delimiter': {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});\n/* \"prismjs/components/prism-erlang\" */\n\nPrism.languages.erlang = {\n  'comment': /%.+/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'quoted-function': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: 'function'\n  },\n  'quoted-atom': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: 'atom'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  'number': [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  'function': /\\b[a-z][\\w@]*(?=\\()/,\n  'variable': {\n    // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: true\n  },\n  'operator': [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'atom': /\\b[a-z][\\w@]*/,\n  'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n};\n/* \"prismjs/components/prism-git\" */\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': /[a-z_]\\w*(?=\\s*:)/i,\n  'keyword': [{\n    pattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.{3}\\s*)on\\b/,\n    lookbehind: true\n  }, /\\b(?:query|fragment|mutation)\\b/],\n  'operator': /!|=|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\nPrism.languages['markup-templating'] = {};\nObject.defineProperties(Prism.languages['markup-templating'], {\n  buildPlaceholders: {\n    // Tokenize all inline templating expressions matching placeholderPattern\n    // If the replaceFilter function is provided, it will be called with every match.\n    // If it returns false, the match will not be replaced.\n    value: function value(env, language, placeholderPattern, replaceFilter) {\n      if (env.language !== language) {\n        return;\n      }\n\n      env.tokenStack = [];\n      env.code = env.code.replace(placeholderPattern, function (match) {\n        if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n          return match;\n        }\n\n        var i = env.tokenStack.length; // Check for existing strings\n\n        while (env.code.indexOf('___' + language.toUpperCase() + i + '___') !== -1) {\n          ++i;\n        } // Create a sparse array\n\n\n        env.tokenStack[i] = match;\n        return '___' + language.toUpperCase() + i + '___';\n      }); // Switch the grammar to markup\n\n      env.grammar = Prism.languages.markup;\n    }\n  },\n  tokenizePlaceholders: {\n    // Replace placeholders with proper tokens after tokenizing\n    value: function value(env, language) {\n      if (env.language !== language || !env.tokenStack) {\n        return;\n      } // Switch the grammar back\n\n\n      env.grammar = Prism.languages[language];\n      var j = 0;\n      var keys = Object.keys(env.tokenStack);\n\n      var walkTokens = function walkTokens(tokens) {\n        if (j >= keys.length) {\n          return;\n        }\n\n        for (var i = 0; i < tokens.length; i++) {\n          var token = tokens[i];\n\n          if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n            var k = keys[j];\n            var t = env.tokenStack[k];\n            var s = typeof token === 'string' ? token : token.content;\n            var index = s.indexOf('___' + language.toUpperCase() + k + '___');\n\n            if (index > -1) {\n              ++j;\n              var before = s.substring(0, index);\n              var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar, language), 'language-' + language, t);\n              var after = s.substring(index + ('___' + language.toUpperCase() + k + '___').length);\n              var replacement;\n\n              if (before || after) {\n                replacement = [before, middle, after].filter(function (v) {\n                  return !!v;\n                });\n                walkTokens(replacement);\n              } else {\n                replacement = middle;\n              }\n\n              if (typeof token === 'string') {\n                Array.prototype.splice.apply(tokens, [i, 1].concat(replacement));\n              } else {\n                token.content = replacement;\n              }\n\n              if (j >= keys.length) {\n                break;\n              }\n            }\n          } else if (token.content && typeof token.content !== 'string') {\n            walkTokens(token.content);\n          }\n        }\n      };\n\n      walkTokens(env.tokens);\n    }\n  }\n});\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-haskell\" */\n\n\nPrism.languages.haskell = {\n  'comment': {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: true\n  },\n  'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  'import_statement': {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: true,\n    inside: {\n      'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  // decimal integers and floating point numbers | octal integers | hexadecimal integers\n  'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  'operator': /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  // In Haskell, nearly everything is a variable, do not highlight these.\n  'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-java\" */\n\nPrism.languages.java = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n  'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'function', {\n  'annotation': {\n    alias: 'punctuation',\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'class-name', {\n  'generics': {\n    pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n    alias: 'function',\n    inside: {\n      keyword: Prism.languages.java.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  }\n});\n/* \"prismjs/components/prism-json\" */\n\nPrism.languages.json = {\n  'property': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  'punctuation': /[{}[\\]);,]/,\n  'operator': /:/g,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'null': /\\bnull\\b/i\n};\nPrism.languages.jsonp = Prism.languages.json;\n/* \"prismjs/components/prism-latex\" */\n\n(function (Prism) {\n  var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      insideEqu = {\n    'equation-command': {\n      pattern: funcPattern,\n      alias: 'regex'\n    }\n  };\n  Prism.languages.latex = {\n    'comment': /%.*/m,\n    // the verbatim environment prints whitespace to the document\n    'cdata': {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * equations can be between $ $ or \\( \\) or \\[ \\]\n     * (all are multiline)\n     */\n    'equation': [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: insideEqu,\n      alias: 'string'\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true,\n      inside: insideEqu,\n      alias: 'string'\n    }],\n\n    /*\n     * arguments which are keywords or references are highlighted\n     * as keywords\n     */\n    'keyword': {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * section or chapter headlines are highlighted as bold so that\n     * they stand out more\n     */\n    'headline': {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function': {\n      pattern: funcPattern,\n      alias: 'selector'\n    },\n    'punctuation': /[[\\]{}&]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'punctuation': /[{}();:,]/,\n  'operator': /[+\\-*\\/]/\n}); // Invert function and punctuation positions\n\nPrism.languages.insertBefore('less', 'punctuation', {\n  'function': Prism.languages.less.function\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\nPrism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n  'blockquote': {\n    // > ...\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: 'punctuation'\n  },\n  'code': [{\n    // Prefixed by 4 spaces or 1 tab\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: 'keyword'\n  }, {\n    // `code`\n    // ``code``\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: 'keyword'\n  }],\n  'title': [{\n    // title 1\n    // =======\n    // title 2\n    // -------\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: 'important',\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    // # title 1\n    // ###### title 6\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: true,\n    alias: 'important',\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  'hr': {\n    // ***\n    // ---\n    // * * *\n    // -----------\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'list': {\n    // * item\n    // + item\n    // - item\n    // 1. item\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'url-reference': {\n    // [id]: http://example.com \"Optional title\"\n    // [id]: http://example.com 'Optional title'\n    // [id]: http://example.com (Optional title)\n    // [id]: <http://example.com> \"Optional title\"\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      'variable': {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: true\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      'punctuation': /^[\\[\\]!:]|[<>]/\n    },\n    alias: 'url'\n  },\n  'bold': {\n    // **strong**\n    // __strong__\n    // Allow only one line break\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  'italic': {\n    // *em*\n    // _em_\n    // Allow only one line break\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^[*_]|[*_]$/\n    }\n  },\n  'url': {\n    // [example](http://example.com \"Optional title\")\n    // [example] [id]\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      'variable': {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: true\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown['bold'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['italic'].inside['url'] = Prism.languages.markdown['url'];\nPrism.languages.markdown['bold'].inside['italic'] = Prism.languages.markdown['italic'];\nPrism.languages.markdown['italic'].inside['bold'] = Prism.languages.markdown['bold'];\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n    'constant': /\\b[A-Z0-9_]{2,}\\b/,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'delimiter': {\n      pattern: /\\?>|<\\?(?:php|=)?/i,\n      alias: 'important'\n    },\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': null // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': null // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.php['heredoc-string'].inside['interpolation'] = string_interpolation;\n  Prism.languages.php['double-quoted-string'].inside['interpolation'] = string_interpolation;\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/(?:<\\?php|<\\?)/ig.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-php-extras\" */\n\n\nPrism.languages.insertBefore('php', 'variable', {\n  'this': /\\$this\\b/,\n  'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  'scope': {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n});\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'triple-quoted-string': {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-ruby\" */\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n * \t\tconstant, builtin, variable, symbol, regex\n */\n\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': [/#.*/, {\n      pattern: /^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m,\n      greedy: true\n    }],\n    'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'tag'\n      },\n      rest: Prism.languages.ruby\n    }\n  };\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex': [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  });\n  Prism.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    // Here we need to specifically allow interpolation\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }];\n})(Prism);\n/* \"prismjs/components/prism-rust\" */\n\n/* TODO\n\tAdd support for Markdown notation inside doc comments\n\tAdd support for nested block comments...\n\tMatch closure params even when not followed by dash or brace\n\tAdd better support for macro definition\n*/\n\n\nPrism.languages.rust = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: true\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }],\n  'char': {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: 'string'\n  },\n  'lifetime-annotation': {\n    pattern: /'[^\\s>']+/,\n    alias: 'symbol'\n  },\n  'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  'attribute': {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: true,\n    alias: 'attr-name'\n  },\n  'function': [/\\w+(?=\\s*\\()/, // Macros can use parens or brackets\n  /\\w+!(?=\\s*\\(|\\[)/],\n  'macro-rules': {\n    pattern: /\\w+!/,\n    alias: 'function'\n  },\n  // Hex, oct, bin, dec numbers with visual separators and type suffix\n  'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  // Closure params should not be confused with bitwise OR |\n  'closure-params': {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      'punctuation': /[|:,]/,\n      'operator': /[&*]/\n    }\n  },\n  'punctuation': /[{}[\\];(),:]|\\.+|->/,\n  'operator': /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  delete Prism.languages.sass.selector;\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)*url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.scss.property = {\n  pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,\n  inside: {\n    'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  }\n};\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': /\\bnull\\b/,\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'variable': /@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-swift\" */\n// issues: nested multiline comments\n\n\nPrism.languages.swift = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n});\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|module|declare|constructor|namespace|abstract|require|type)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-vim\" */\n\nPrism.languages.vim = {\n  'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  'comment': /\".*/,\n  'function': /\\w+(?=\\()/,\n  'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  'punctuation': /[{}[\\](),;:]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nexport default Prism;","import Prism from './vendor/prism';\nimport theme from '../themes/duotoneDark';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\nexport default defaultProps;","var newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = types[0] === token.type ? types : types.concat(token.type);\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var _i = 1; _i < newlineCount; _i++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[_i]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nexport default normalizeTokens;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var types = themeEntry.types,\n        languages = themeEntry.languages,\n        style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nexport default themeToDict;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport React, { Component } from \"react\";\nimport normalizeTokens from \"../utils/normalizeTokens\";\nimport themeToDict from \"../utils/themeToDict\";\n\nvar Highlight =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Highlight, _Component);\n\n  function Highlight() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.prevTheme = void 0;\n    _this.prevLanguage = void 0;\n    _this.themeDict = void 0;\n\n    _this.getThemeDict = function (props) {\n      if (_this.themeDict !== undefined && props.theme === _this.prevTheme && props.language === _this.prevLanguage) {\n        return _this.themeDict;\n      }\n\n      _this.prevTheme = props.theme;\n      _this.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return _this.themeDict = themeDict;\n    };\n\n    _this.getLineProps = function (_ref) {\n      var key = _ref.key,\n          className = _ref.className,\n          style = _ref.style,\n          line = _ref.line,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"key\", \"className\", \"style\", \"line\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = _this.getThemeDict(_this.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    _this.getStyleForToken = function (_ref2) {\n      var types = _ref2.types,\n          empty = _ref2.empty;\n      var typesSize = types.length;\n\n      var themeDict = _this.getThemeDict(_this.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    };\n\n    _this.getTokenProps = function (_ref3) {\n      var key = _ref3.key,\n          className = _ref3.className,\n          style = _ref3.style,\n          token = _ref3.token,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"key\", \"className\", \"style\", \"token\"]);\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: _this.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) output.key = key;\n      if (className) output.className += \" \" + className;\n      return output;\n    };\n\n    return _this;\n  }\n\n  var _proto = Highlight.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Prism = _this$props.Prism,\n        language = _this$props.language,\n        code = _this$props.code,\n        children = _this$props.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;","import Prism from './vendor/prism';\nimport defaultProps from './defaultProps';\nimport Highlight from './components/Highlight';\nexport { Prism, defaultProps };\nexport default Highlight;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _shallowEqual = require('./utils/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _series = require('./utils/series');\n\nvar _series2 = _interopRequireDefault(_series);\n\nvar _whilst = require('./utils/whilst');\n\nvar _whilst2 = _interopRequireDefault(_whilst);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nvar _uniqueId = require('./utils/uniqueId');\n\nvar _uniqueId2 = _interopRequireDefault(_uniqueId);\n\nvar _innerSize = require('./utils/innerSize');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction assertElementFitsWidth(el, width) {\n    // -1: temporary bugfix, will be refactored soon\n    return el.scrollWidth - 1 <= width;\n}\n\nfunction assertElementFitsHeight(el, height) {\n    // -1: temporary bugfix, will be refactored soon\n    return el.scrollHeight - 1 <= height;\n}\n\nfunction noop() {}\n\nvar TextFit = function (_React$Component) {\n    _inherits(TextFit, _React$Component);\n\n    function TextFit(props) {\n        _classCallCheck(this, TextFit);\n\n        var _this = _possibleConstructorReturn(this, (TextFit.__proto__ || Object.getPrototypeOf(TextFit)).call(this, props));\n\n        _this.state = {\n            fontSize: null,\n            ready: false\n        };\n\n        _this.handleWindowResize = function () {\n            _this.process();\n        };\n\n        if ('perfectFit' in props) {\n            console.warn('TextFit property perfectFit has been removed.');\n        }\n        return _this;\n    }\n\n    _createClass(TextFit, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            this.handleWindowResize = (0, _throttle2.default)(this.handleWindowResize, this.props.throttle);\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var autoResize = this.props.autoResize;\n\n            if (autoResize) {\n                window.addEventListener('resize', this.handleWindowResize);\n            }\n            this.process();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            var ready = this.state.ready;\n\n            if (!ready) return;\n            if ((0, _shallowEqual2.default)(this.props, prevProps)) return;\n            this.process();\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var autoResize = this.props.autoResize;\n\n            if (autoResize) {\n                window.removeEventListener('resize', this.handleWindowResize);\n            }\n            // Setting a new pid will cancel all running processes\n            this.pid = (0, _uniqueId2.default)();\n        }\n    }, {\n        key: 'process',\n        value: function process() {\n            var _this2 = this;\n\n            var _props = this.props,\n                min = _props.min,\n                max = _props.max,\n                mode = _props.mode,\n                forceSingleModeWidth = _props.forceSingleModeWidth,\n                onReady = _props.onReady;\n\n            var el = this._parent;\n            var wrapper = this._child;\n\n            var originalWidth = (0, _innerSize.innerWidth)(el);\n            var originalHeight = (0, _innerSize.innerHeight)(el);\n\n            if (originalHeight <= 0 || isNaN(originalHeight)) {\n                console.warn('Can not process element without height. Make sure the element is displayed and has a static height.');\n                return;\n            }\n\n            if (originalWidth <= 0 || isNaN(originalWidth)) {\n                console.warn('Can not process element without width. Make sure the element is displayed and has a static width.');\n                return;\n            }\n\n            var pid = (0, _uniqueId2.default)();\n            this.pid = pid;\n\n            var shouldCancelProcess = function shouldCancelProcess() {\n                return pid !== _this2.pid;\n            };\n\n            var testPrimary = mode === 'multi' ? function () {\n                return assertElementFitsHeight(wrapper, originalHeight);\n            } : function () {\n                return assertElementFitsWidth(wrapper, originalWidth);\n            };\n\n            var testSecondary = mode === 'multi' ? function () {\n                return assertElementFitsWidth(wrapper, originalWidth);\n            } : function () {\n                return assertElementFitsHeight(wrapper, originalHeight);\n            };\n\n            var mid = void 0;\n            var low = min;\n            var high = max;\n\n            this.setState({ ready: false });\n\n            (0, _series2.default)([\n            // Step 1:\n            // Binary search to fit the element's height (multi line) / width (single line)\n            function (stepCallback) {\n                return (0, _whilst2.default)(function () {\n                    return low <= high;\n                }, function (whilstCallback) {\n                    if (shouldCancelProcess()) return whilstCallback(true);\n                    mid = parseInt((low + high) / 2, 10);\n                    _this2.setState({ fontSize: mid }, function () {\n                        if (shouldCancelProcess()) return whilstCallback(true);\n                        if (testPrimary()) low = mid + 1;else high = mid - 1;\n                        return whilstCallback();\n                    });\n                }, stepCallback);\n            },\n            // Step 2:\n            // Binary search to fit the element's width (multi line) / height (single line)\n            // If mode is single and forceSingleModeWidth is true, skip this step\n            // in order to not fit the elements height and decrease the width\n            function (stepCallback) {\n                if (mode === 'single' && forceSingleModeWidth) return stepCallback();\n                if (testSecondary()) return stepCallback();\n                low = min;\n                high = mid;\n                return (0, _whilst2.default)(function () {\n                    return low < high;\n                }, function (whilstCallback) {\n                    if (shouldCancelProcess()) return whilstCallback(true);\n                    mid = parseInt((low + high) / 2, 10);\n                    _this2.setState({ fontSize: mid }, function () {\n                        if (pid !== _this2.pid) return whilstCallback(true);\n                        if (testSecondary()) low = mid + 1;else high = mid - 1;\n                        return whilstCallback();\n                    });\n                }, stepCallback);\n            },\n            // Step 3\n            // Limits\n            function (stepCallback) {\n                // We break the previous loop without updating mid for the final time,\n                // so we do it here:\n                mid = Math.min(low, high);\n\n                // Ensure we hit the user-supplied limits\n                mid = Math.max(mid, min);\n                mid = Math.min(mid, max);\n\n                // Sanity check:\n                mid = Math.max(mid, 0);\n\n                if (shouldCancelProcess()) return stepCallback(true);\n                _this2.setState({ fontSize: mid }, stepCallback);\n            }], function (err) {\n                // err will be true, if another process was triggered\n                if (err || shouldCancelProcess()) return;\n                _this2.setState({ ready: true }, function () {\n                    return onReady(mid);\n                });\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this;\n\n            var _props2 = this.props,\n                children = _props2.children,\n                text = _props2.text,\n                style = _props2.style,\n                min = _props2.min,\n                max = _props2.max,\n                mode = _props2.mode,\n                forceWidth = _props2.forceWidth,\n                forceSingleModeWidth = _props2.forceSingleModeWidth,\n                throttle = _props2.throttle,\n                autoResize = _props2.autoResize,\n                onReady = _props2.onReady,\n                props = _objectWithoutProperties(_props2, ['children', 'text', 'style', 'min', 'max', 'mode', 'forceWidth', 'forceSingleModeWidth', 'throttle', 'autoResize', 'onReady']);\n\n            var _state = this.state,\n                fontSize = _state.fontSize,\n                ready = _state.ready;\n\n            var finalStyle = _extends({}, style, {\n                fontSize: fontSize\n            });\n\n            var wrapperStyle = {\n                display: ready ? 'block' : 'inline-block'\n            };\n            if (mode === 'single') wrapperStyle.whiteSpace = 'nowrap';\n\n            return _react2.default.createElement(\n                'div',\n                _extends({ ref: function ref(c) {\n                        return _this3._parent = c;\n                    }, style: finalStyle }, props),\n                _react2.default.createElement(\n                    'div',\n                    { ref: function ref(c) {\n                            return _this3._child = c;\n                        }, style: wrapperStyle },\n                    text && typeof children === 'function' ? ready ? children(text) : text : children\n                )\n            );\n        }\n    }]);\n\n    return TextFit;\n}(_react2.default.Component);\n\nTextFit.propTypes = {\n    children: _propTypes2.default.node,\n    text: _propTypes2.default.string,\n    min: _propTypes2.default.number,\n    max: _propTypes2.default.number,\n    mode: _propTypes2.default.oneOf(['single', 'multi']),\n    forceSingleModeWidth: _propTypes2.default.bool,\n    throttle: _propTypes2.default.number,\n    onReady: _propTypes2.default.func\n};\nTextFit.defaultProps = {\n    min: 1,\n    max: 100,\n    mode: 'multi',\n    forceSingleModeWidth: true,\n    throttle: 50,\n    autoResize: true,\n    onReady: noop\n};\nexports.default = TextFit;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = shallowEqual;\nfunction shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    var hasOwn = Object.prototype.hasOwnProperty;\n    for (var i = 0; i < keysA.length; i++) {\n        if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n            return false;\n        }\n    }\n\n    return true;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = series;\n\nvar _process = require('process');\n\nvar _process2 = _interopRequireDefault(_process);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction series(tasks, cb) {\n    var results = [];\n    var current = 0;\n    var isSync = true;\n\n    function done(err) {\n        function end() {\n            if (cb) cb(err, results);\n        }\n        if (isSync) _process2.default.nextTick(end);else end();\n    }\n\n    function each(err, result) {\n        results.push(result);\n        if (++current >= tasks.length || err) done(err);else tasks[current](each);\n    }\n\n    if (tasks.length > 0) tasks[0](each);else done(null);\n\n    isSync = false;\n} /**\n   * Run the functions in the tasks array in series, each one running once the previous function has completed.\n   * If any functions in the series pass an error to its callback, no more functions are run,\n   * and callback is immediately called with the value of the error. Otherwise, callback receives an array of results\n   * when tasks have completed.\n   * Taken from https://github.com/feross/run-series\n   *\n   * @params {Array} tasks An array containing functions to run, each function is passed a callback(err, result) which it must call on completion with an error err (which can be null) and an optional result value.\n   * @params {Function} callback(err, results) - An optional callback to run once all the functions have completed. This function gets a results array containing all the result arguments passed to the task callbacks.\n   */","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = whilst;\nvar noop = function noop() {};\n\n/**\n * Repeatedly call fn, while test returns true. Calls callback when stopped, or an error occurs.\n *\n * @param {Function} test Synchronous truth test to perform before each execution of fn.\n * @param {Function} fn A function which is called each time test passes. The function is passed a callback(err), which must be called once it has completed with an optional err argument.\n * @param {Function} callback A callback which is called after the test fails and repeated execution of fn has stopped.\n */\n\nfunction whilst(test, iterator) {\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n    if (test()) {\n        iterator(function next(err) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            if (err) {\n                callback(err);\n            } else if (test.apply(this, args)) {\n                iterator(next);\n            } else {\n                callback(null);\n            }\n        });\n    } else {\n        callback(null);\n    }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = throttle;\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n * Taken from https://github.com/component/throttle v1.0.0\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle(func, wait) {\n    var ctx = void 0;\n    var args = void 0;\n    var rtn = void 0;\n    var timeoutID = void 0;\n    var last = 0;\n\n    function call() {\n        timeoutID = 0;\n        last = +new Date();\n        rtn = func.apply(ctx, args);\n        ctx = null;\n        args = null;\n    }\n\n    return function throttled() {\n        ctx = this;\n        args = arguments;\n        var delta = new Date() - last;\n        if (!timeoutID) {\n            if (delta >= wait) call();else timeoutID = setTimeout(call, wait - delta);\n        }\n        return rtn;\n    };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = uniqueId;\nvar uid = 0;\n\nfunction uniqueId() {\n    return uid++;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.innerHeight = innerHeight;\nexports.innerWidth = innerWidth;\n// Calculate height without padding.\nfunction innerHeight(el) {\n    var style = window.getComputedStyle(el, null);\n    return el.clientHeight - parseInt(style.getPropertyValue('padding-top'), 10) - parseInt(style.getPropertyValue('padding-bottom'), 10);\n}\n\n// Calculate width without padding.\nfunction innerWidth(el) {\n    var style = window.getComputedStyle(el, null);\n    return el.clientWidth - parseInt(style.getPropertyValue('padding-left'), 10) - parseInt(style.getPropertyValue('padding-right'), 10);\n}","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\nmodule.exports = Prism;\nPrism.default = Prism;","// @flow\r\n// Duotone Dark\r\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\r\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\r\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\r\n\r\n/*:: import type { PrismTheme } from '../src/types' */\r\n\r\nvar theme /*: PrismTheme */ = {\r\n  plain: {\r\n    backgroundColor: \"#2a2734\",\r\n    color: \"#9a86fd\"\r\n  },\r\n  styles: [\r\n    {\r\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\r\n      style: {\r\n        color: \"#6c6783\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"namespace\"],\r\n      style: {\r\n        opacity: 0.7\r\n      }\r\n    },\r\n    {\r\n      types: [\"tag\", \"operator\", \"number\"],\r\n      style: {\r\n        color: \"#e09142\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"property\", \"function\"],\r\n      style: {\r\n        color: \"#9a86fd\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\r\n      style: {\r\n        color: \"#eeebff\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"attr-name\"],\r\n      style: {\r\n        color: \"#c4b9fe\"\r\n      }\r\n    },\r\n    {\r\n      types: [\r\n        \"boolean\",\r\n        \"string\",\r\n        \"entity\",\r\n        \"url\",\r\n        \"attr-value\",\r\n        \"keyword\",\r\n        \"control\",\r\n        \"directive\",\r\n        \"unit\",\r\n        \"statement\",\r\n        \"regex\",\r\n        \"at-rule\",\r\n        \"placeholder\",\r\n        \"variable\"\r\n      ],\r\n      style: {\r\n        color: \"#ffcc99\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"deleted\"],\r\n      style: {\r\n        textDecorationLine: \"line-through\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"inserted\"],\r\n      style: {\r\n        textDecorationLine: \"underline\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"italic\"],\r\n      style: {\r\n        fontStyle: \"italic\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"important\", \"bold\"],\r\n      style: {\r\n        fontWeight: \"bold\"\r\n      }\r\n    },\r\n    {\r\n      types: [\"important\"],\r\n      style: {\r\n        color: \"#c4b9fe\"\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nmodule.exports = theme;\r\n"],"sourceRoot":""}