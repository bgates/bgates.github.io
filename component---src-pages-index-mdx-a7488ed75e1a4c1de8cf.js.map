{"version":3,"sources":["webpack:///./src/pages/index.mdx","webpack:///./src/components/CodeBlock.js","webpack:///./src/components/Layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","mdxType","parentName","id","href","className","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","isMDXComponent","Code","children","language","replace","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","prism_react_renderer__WEBPACK_IMPORTED_MODULE_7__","defaultProps","code","theme","_ref2","style","tokens","getLineProps","getTokenProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","padding","filter","line","some","token","empty","map","i","key","__webpack_exports__","_ref3","content","css","marginBottom","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_5___default","a","h1","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react_textfit__WEBPACK_IMPORTED_MODULE_4__","mode","Layout","display","justifyContent","alignItems","backgroundColor","marginTop","marginLeft","marginRight","maxWidth","boxShadow","borderRadius","fontFamily","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","color","fontSize","@media (min-width: 576px)","flexGrow","lineHeight","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-index-mdx-a7488ed75e1a4c1de8cf.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bgates/Nerd/js/react/blog/src/components/Layout.js\";\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Software Development for the Newly Not-Beginner`}</h1>\n    <p>{`I want to write about solving problems.`}</p>\n    <p>{`When I was a kid, the first time I had a serious problem in school`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-1\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-1\",\n          \"className\": \"footnote-ref\"\n        }}>{`1`}</a></sup>{` was in Algebra I. The Algebra people tried to help me by putting solutions to the odd-numbered questions in the back of the textbook. When I wanted simply to check my own answer, that could be helpful. If I didn't already have an idea of what I was doing, the worked out solutions didn't do much for me. They would always look like`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`the problem\nsome algebra\nsome more algebra\neven more algebra\nthe solution\n`}</code></pre>\n    <p>{`I couldn't learn Algebra by looking at all that any more than I could learn how to paint by looking at a painting. At any point in solving an algebra problem, you can do a lot of things - add, subtract, multiply, divide; simplify, factor; write an equation; draw a graph. I wanted to know how someone could look at the problem and decide, out of all the things that `}<em parentName=\"p\">{`could`}</em>{` be done, which one `}<em parentName=\"p\">{`should`}</em>{` be done.`}</p>\n    <p>{`Eventually my problems with high school math straightened themselves out `}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-how\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-how\",\n          \"className\": \"footnote-ref\"\n        }}>{`how`}</a></sup>{` and I went on to other things. These days I work as a software developer. I had a little bit of college coursework in software development: one semester of FORTRAN about which I remember zippo, a couple weeks with C and PHP, and a semester of bioinformatics during which knowledge of Perl was assumed (meaning, we had to use Perl to do the homework, but I don't remember it as part of the curriculum for the course). Other than that, I'm self-taught, which means I spend a lot of time reading stuff on the internet and wondering how to apply what I read to my own purposes. There are times, while I'm reading tutorials and codebases, that I feel much like I used to when I looked at the pristine, finished, perfect, explanation-free solutions in the back of the book. `}<em parentName=\"p\">{`How on earth did you know to do that?`}</em>{`, I want to ask.`}</p>\n    <p>{`Recently, in the best job I ever had, I got to teach other people about software development. I suspect they may have wanted to ask me that same question from time to time. Probably they did ask me. It's the question I most want to answer, and the graduates of my program are the people I most want to help, so I am starting this blog for people like them: recent boot camp grads or self-taught developers, who know the fundamentals of a programming language but could still use some help figuring out larger-scale problems. This blog is also for me, because one of the most important things I learned while teaching is the value of refining my own thoughts until they are clear enough to put into words. I talked myself into understanding some things while I taught classes at The Iron Yard, and I expect to write myself into understanding some more things here.`}</p>\n    <Link to=\"/2018-advent-of-code-day-one\" mdxType=\"Link\">Let's start</Link>\n\n    <div {...{\n      \"className\": \"footnotes\"\n    }}>\n      <hr parentName=\"div\"></hr>\n      <ol parentName=\"div\">\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-1\"\n        }}>{`Besides stuff like gym class, shop class, talking to girls, and all the places you'd expect a little Poindexter to struggle.`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-1\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-how\"\n        }}>{`I can't say much about how. I was miserable the entire year, then went home for the summer and didn't think about it. When I came back to school in the fall, it wasn't hard anymore.`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-how\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n      </ol>\n    </div>\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      ","/* global tw */\nimport React from 'react'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport { MDXProvider } from '@mdx-js/react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\n\nexport const Code = ({ children, className }) => {\n  const language = className ? className.replace(/language-/, '') : null\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children}\n      language={language}\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style, padding: '20px' }}>\n          {tokens\n            .filter(line => line.some(token => !token.empty))\n            .map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nconst components = {\n  code: Code,\n}\n\nexport default ({ content }) => (\n  <div css={tw`mb-4`}>\n    <MDXProvider components={components}>\n      <MDXRenderer>{content}</MDXRenderer>\n    </MDXProvider>\n  </div>\n)\n","/* global tw */\nimport React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { Textfit } from 'react-textfit'\nimport 'normalize.css'\nimport theme from 'prism-react-renderer/themes/nightOwl'\nimport { Code } from './CodeBlock'\n\nconst FitH1 = ({ children, ...props }) => (\n  <h1 {...props}>\n    <Textfit mode=\"single\">{children}</Textfit>\n  </h1>\n)\n\nconst components = {\n  h1: FitH1,\n  code: Code,\n}\nconst Layout = ({ children }) => (\n  <div css={tw`flex justify-center items-center bg-grey-light`}>\n    <div\n      css={tw`bg-white container my-8 mx-auto max-w-xl shadow-lg rounded-lg font-sans`}\n    >\n      <div\n        css={tw`px-16 py-4 text-center text-grey-darkest text-xl sm:text-left sm:flex-grow leading-normal`}\n      >\n        <MDXProvider components={components}>{children}</MDXProvider>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}