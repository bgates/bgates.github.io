{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/pages/post-list.js","webpack:///./src/components/CodeBlock.js","webpack:///./src/components/Layout.js"],"names":["Header","_ref","siteTitle","Object","core_browser_esm","gatsby_browser_entry","to","PostList","edges","data","allMdx","Layout","components_Header","map","edge","_edge$node","node","excerpt","frontmatter","slug","fields","key","title","query","Code","children","className","language","replace","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","prism_react_renderer__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","defaultProps","code","theme","_ref2","style","tokens","getLineProps","getTokenProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","padding","filter","line","some","token","empty","i","components","__webpack_exports__","_ref3","content","css","marginBottom","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_5___default","a","h1","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react_textfit__WEBPACK_IMPORTED_MODULE_4__","mode","display","justifyContent","alignItems","backgroundColor","marginTop","marginLeft","marginRight","maxWidth","boxShadow","borderRadius","fontFamily","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","color","fontSize","@media (min-width: 576px)","flexGrow","lineHeight","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-post-list-js-e9d3653b13d2727c8517.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div>\n      <h1>\n        <Link to=\"/\">{siteTitle}</Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Header from '../components/Header'\n\nconst PostList = ({ data }) => {\n  const { edges } = data.allMdx\n  return (\n    <Layout>\n      <Header />\n      {edges.map(edge => {\n        const {\n          excerpt,\n          frontmatter,\n          fields: { slug },\n        } = edge.node\n        return (\n          <div key={slug}>\n            <Link to={slug}>{frontmatter.title}</Link>\n            <p>{excerpt}</p>\n          </div>\n        )\n      })}\n      <div>\n        <Link to=\"/tags\">Browse all tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport default PostList\n\nexport const query = graphql`\n  query PostListQuery {\n    allMdx(\n      filter: { fileAbsolutePath: { glob: \"**/content/*.mdx\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","/* global tw */\nimport React from 'react'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport { MDXProvider } from '@mdx-js/react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/nightOwl'\n\nexport const Code = ({ children, className }) => {\n  const language = className ? className.replace(/language-/, '') : null\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children}\n      language={language}\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style, padding: '20px' }}>\n          {tokens\n            .filter(line => line.some(token => !token.empty))\n            .map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nconst components = {\n  code: Code,\n}\n\nexport default ({ content }) => (\n  <div css={tw`mb-4`}>\n    <MDXProvider components={components}>\n      <MDXRenderer>{content}</MDXRenderer>\n    </MDXProvider>\n  </div>\n)\n","/* global tw */\nimport React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { Textfit } from 'react-textfit'\nimport 'normalize.css'\nimport theme from 'prism-react-renderer/themes/nightOwl'\nimport { Code } from './CodeBlock'\n\nconst FitH1 = ({ children, ...props }) => (\n  <h1 {...props}>\n    <Textfit mode=\"single\">{children}</Textfit>\n  </h1>\n)\n\nconst components = {\n  h1: FitH1,\n  code: Code,\n}\nconst Layout = ({ children }) => (\n  <div css={tw`flex justify-center items-center bg-grey-light`}>\n    <div\n      css={tw`bg-white container my-8 mx-auto max-w-xl shadow-lg rounded-lg font-sans`}\n    >\n      <div\n        css={tw`px-16 py-4 text-center text-grey-darkest text-xl sm:text-left sm:flex-grow leading-normal`}\n      >\n        <MDXProvider components={components}>{children}</MDXProvider>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}